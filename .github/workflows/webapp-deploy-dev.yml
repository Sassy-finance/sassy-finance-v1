name: WebApp Deploy DEV (no Fleek)
on:
  workflow_dispatch:
  push:
    paths:
      - 'packages/web-app/**'
      - '!.github/**'
    branches:
      - 'main'

jobs:
  setup-env-vars:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.envtest.outputs.environment }}${{ steps.envdev.outputs.environment }}
      branch_prefix: ${{ steps.envtest.outputs.branch_prefix }}${{ steps.envdev.outputs.branch_prefix }}

    steps:
      - name: Set environment to DEV
        if: endsWith(github.ref, '/main')
        id: envdev
        run: |
          echo "environment=development" >> $GITHUB_OUTPUT
          echo "branch_prefix=develop" >> $GITHUB_OUTPUT

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [setup-env-vars]
    if: needs.setup-env-vars.outputs.environment != ''
    environment: ${{ needs.setup-env-vars.outputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup NodeJS, install deps from parent folder
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
        
      - name: Install deps, build and link ui-components
        run: |
          cd packages/ui-components
          yarn install --pure-lockfile
          yarn build
          yarn link
    
      - name: Install deps and link web-app
        run: |
          cd packages/web-app
          yarn install --pure-lockfile
          yarn link @aragon/ui-components

      - name: Build web-app
        run: |
          cd packages/web-app 
          yarn build
        env:
          VITE_REACT_APP_DEPLOY_VERSION: ${{ github.sha }}
          VITE_REACT_APP_DEPLOY_ENVIRONMENT: ${{ needs.setup-env-vars.outputs.environment }}
          VITE_REACT_APP_ANALYTICS_KEY: ${{ secrets.VITE_REACT_APP_ANALYTICS_KEY }}
          VITE_IPFS_API_KEY: ${{ secrets.VITE_IPFS_API_KEY }}
          VITE_ETHERSCAN_API_KEY: ${{ secrets.VITE_ETHERSCAN_API_KEY }}
          VITE_INFURA_GOERLI_PROJECT_ID: ${{ secrets.VITE_INFURA_GOERLI_PROJECT_ID }}
          VITE_INFURA_MAINNET_PROJECT_ID: ${{ secrets.VITE_INFURA_MAINNET_PROJECT_ID }}
          VITE_ALCHEMY_KEY_POLYGON_MAINNET: ${{ secrets.VITE_ALCHEMY_KEY_POLYGON_MAINNET }}
          VITE_ALCHEMY_KEY_POLYGON_MUMBAI: ${{ secrets.VITE_ALCHEMY_KEY_POLYGON_MUMBAI }}
          NODE_OPTIONS: '--max-old-space-size=6656'

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Git hash and Timestamp in seconds
        id: vars
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )" >> $GITHUB_OUTPUT
          echo "GIT_HASH_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "DATE_IN_SECS=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Set swap space on Runner
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      ## Use this step instead of `docker/build-push-action@v4` to avoid JavaScript heap out memory error
      ## Using 'docker buildx build ...' allows controlling memory and memory-swap
      ## https://developer.ibm.com/articles/nodejs-memory-management-in-container-environments/
      ## https://docs.docker.com/engine/reference/commandline/buildx_build/#build-arg
      - name: Build Docker image from scratch
        run: |
          mkdir -p /tmp/docker-build-push-${{ steps.vars.outputs.DATE_IN_SECS }}/
          docker buildx build . --file ./Dockerfile.webapp.dev --push \
          --build-arg NODE_OPTIONS='--max-old-space-size=6656' \
          --tag ialberquilla/sassy-frontend

