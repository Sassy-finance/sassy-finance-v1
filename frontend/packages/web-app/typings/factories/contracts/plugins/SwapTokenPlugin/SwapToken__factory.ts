/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SwapToken,
  SwapTokenInterface,
} from "../../../../contracts/plugins/SwapTokenPlugin/SwapToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "where",
        type: "address",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "permissionId",
        type: "bytes32",
      },
    ],
    name: "DaoUnauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "SWAP_TOKENS_PERMISSION_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_PLUGIN_PERMISSION_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WITHDRAW_PERMISSION_ID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [
      {
        internalType: "contract IDAO",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDAO",
        name: "_dao",
        type: "address",
      },
      {
        internalType: "address",
        name: "_uniswapRouterAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginType",
    outputs: [
      {
        internalType: "enum IPlugin.PluginType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenOut",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vaultGroupAddress",
        type: "address",
      },
    ],
    name: "swapTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawFromTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611a40610119600039600081816108a40152818161093f01528181610bb001528181610c460152610d410152611a406000f3fe6080604052600436106100e85760003560e01c8063485cc9551161008a5780639a44bac0116100595780639a44bac014610267578063c31c9c071461029b578063c9c4bfca146102bc578063da89c9bd146102f057600080fd5b8063485cc955146101fc5780634f1ef2861461021c57806352d1902d1461022f5780635c60da1b1461025257600080fd5b8063303b6128116100c6578063303b61281461016e5780633659cfe61461018e5780634162169f146101ae57806341de6830146101e057600080fd5b806301ffc9a7146100ed5780630663af0814610122578063089fe6aa14610144575b600080fd5b3480156100f957600080fd5b5061010d6101083660046114ad565b610324565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b5061014261013d366004611504565b610409565b005b34801561015057600080fd5b5061015a610bb881565b60405162ffffff9091168152602001610119565b34801561017a57600080fd5b50610142610189366004611530565b6106b5565b34801561019a57600080fd5b506101426101a9366004611583565b61089a565b3480156101ba57600080fd5b5060c9546001600160a01b03165b6040516001600160a01b039091168152602001610119565b3480156101ec57600080fd5b50600060405161011991906115a0565b34801561020857600080fd5b506101426102173660046115c8565b610a3c565b61014261022a366004611670565b610ba6565b34801561023b57600080fd5b50610244610d34565b604051908152602001610119565b34801561025e57600080fd5b506101c8610df9565b34801561027357600080fd5b506102447ffa65bb7a7a179a721a21a3cefd5b633e9a9673e67b6319105b4d3d604c5bf92b81565b3480156102a757600080fd5b5061012d546101c8906001600160a01b031681565b3480156102c857600080fd5b506102447f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f581565b3480156102fc57600080fd5b506102447f5ddd50d2be5d3a44099b4a7bfe7926c25953294e405a8a95fe5fd0127dcf18d981565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f41de68300000000000000000000000000000000000000000000000000000000014806103b757507fffffffff0000000000000000000000000000000000000000000000000000000082167f52d1902d00000000000000000000000000000000000000000000000000000000145b8061040357507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60c9547ffa65bb7a7a179a721a21a3cefd5b633e9a9673e67b6319105b4d3d604c5bf92b90610447906001600160a01b031630335b84600036610e31565b60408051600280825260608201909252600091816020015b6040805160608082018352600080835260208301529181019190915281526020019060019003908161045f575050604080516060810182526001600160a01b038716815260006020808301829052835130602482015260448082018a9052855180830390910181526064909101855290810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b3000000000000000000000000000000000000000000000000000000001790529282019290925282519293509183919061053157610531611703565b60200260200101819052506040518060600160405280856001600160a01b03168152602001600081526020017fa9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b30866040516024016105a59291906001600160a01b03929092168252602082015260400190565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152905281518290600190811061061b5761061b611703565b602002602001018190525061063860c9546001600160a01b031690565b6001600160a01b031663c71bf3248260006040518363ffffffff1660e01b8152600401610666929190611769565b6000604051808303816000875af1158015610685573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ad919081019061181f565b505050505050565b60c9547f5ddd50d2be5d3a44099b4a7bfe7926c25953294e405a8a95fe5fd0127dcf18d9906106ee906001600160a01b0316303361043e565b61012d546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018690529086169063095ea7b3906044016020604051808303816000875af115801561075b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077f9190611925565b5060408051610100810182526001600160a01b03878116825285811660208301908152610bb883850190815286831660608501908152426080860190815260a086018b8152600060c0880181815260e0890191825261012d5499517f414bf389000000000000000000000000000000000000000000000000000000008152895189166004820152965188166024880152945162ffffff166044870152925186166064860152905160848501525160a4840152905160c483015251821660e48201529192169063414bf38990610104016020604051808303816000875af115801561086d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108919190611947565b50505050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361093d5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c000000000000000000000000000000000000000060648201526084015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109987f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610a145760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610934565b610a1d81610f17565b60408051600080825260208201909252610a3991839190610f50565b50565b600054610100900460ff1615808015610a5c5750600054600160ff909116105b80610a765750303b158015610a76575060005460ff166001145b610ae85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610934565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610b29576000805461ff0019166101001790555b610b32836110f0565b61012d805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384161790558015610ba1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c445760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610934565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c9f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614610d1b5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610934565b610d2482610f17565b610d3082826001610f50565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610dd45760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610934565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b6000610e2c7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b6040517ffdef91060000000000000000000000000000000000000000000000000000000081526001600160a01b0387169063fdef910690610e7e9088908890889088908890600401611960565b602060405180830381865afa158015610e9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebf9190611925565b6106ad576040517f32dbe3b40000000000000000000000000000000000000000000000000000000081526001600160a01b03808816600483015280871660248301528516604482015260648101849052608401610934565b60c9547f821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f590610d30906001600160a01b0316303361043e565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610f8357610ba183611176565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610fdd575060408051601f3d908101601f19168201909252610fda91810190611947565b60015b61104f5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610934565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146110e45760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610934565b50610ba1838383611241565b600054610100900460ff1661116d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610934565b610a398161126c565b6001600160a01b0381163b6111f35760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610934565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61124a83611318565b6000825111806112575750805b15610ba1576112668383611358565b50505050565b600054610100900460ff166112e95760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610934565b60c9805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61132181611176565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6113d75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e747261637400000000000000000000000000000000000000000000000000006064820152608401610934565b600080846001600160a01b0316846040516113f291906119b4565b600060405180830381855af49150503d806000811461142d576040519150601f19603f3d011682016040523d82523d6000602084013e611432565b606091505b509150915061145a82826040518060600160405280602781526020016119e460279139611463565b95945050505050565b6060831561147257508161147c565b61147c8383611483565b9392505050565b8151156114935781518083602001fd5b8060405162461bcd60e51b815260040161093491906119d0565b6000602082840312156114bf57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461147c57600080fd5b6001600160a01b0381168114610a3957600080fd5b6000806040838503121561151757600080fd5b8235611522816114ef565b946020939093013593505050565b6000806000806080858703121561154657600080fd5b8435611551816114ef565b9350602085013592506040850135611568816114ef565b91506060850135611578816114ef565b939692955090935050565b60006020828403121561159557600080fd5b813561147c816114ef565b60208101600383106115c257634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156115db57600080fd5b82356115e6816114ef565b915060208301356115f6816114ef565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561164057611640611601565b604052919050565b600067ffffffffffffffff82111561166257611662611601565b50601f01601f191660200190565b6000806040838503121561168357600080fd5b823561168e816114ef565b9150602083013567ffffffffffffffff8111156116aa57600080fd5b8301601f810185136116bb57600080fd5b80356116ce6116c982611648565b611617565b8181528660208385010111156116e357600080fd5b816020840160208301376000602083830101528093505050509250929050565b634e487b7160e01b600052603260045260246000fd5b60005b8381101561173457818101518382015260200161171c565b50506000910152565b60008151808452611755816020860160208601611719565b601f01601f19169290920160200192915050565b60006060808301600084526020828186015281875180845260808701915060808160051b880101935082890160005b82811015611809578886037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80018452815180516001600160a01b0316875285810151868801526040908101519087018890526117f68888018261173d565b9650509284019290840190600101611798565b5050505050604093909301939093525092915050565b600080604080848603121561183357600080fd5b835167ffffffffffffffff8082111561184b57600080fd5b818601915086601f83011261185f57600080fd5b815160208282111561187357611873611601565b8160051b611882828201611617565b928352848101820192828101908b85111561189c57600080fd5b83870192505b84831015611911578251868111156118ba5760008081fd5b8701603f81018d136118cc5760008081fd5b848101516118dc6116c982611648565b8181528e8b8385010111156118f15760008081fd5b611900828883018d8601611719565b8452505091830191908301906118a2565b9990920151989a9899505050505050505050565b60006020828403121561193757600080fd5b8151801515811461147c57600080fd5b60006020828403121561195957600080fd5b5051919050565b60006001600160a01b03808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600082516119c6818460208701611719565b9190910192915050565b60208152600061147c602083018461173d56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220781f616668c7685bfae1f1e24c4f57c52c05ea7156a493ee1c35ab35c0fedba664736f6c63430008110033";

type SwapTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapToken__factory extends ContractFactory {
  constructor(...args: SwapTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapToken> {
    return super.deploy(overrides || {}) as Promise<SwapToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapToken {
    return super.attach(address) as SwapToken;
  }
  override connect(signer: Signer): SwapToken__factory {
    return super.connect(signer) as SwapToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapTokenInterface {
    return new utils.Interface(_abi) as SwapTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapToken {
    return new Contract(address, _abi, signerOrProvider) as SwapToken;
  }
}
