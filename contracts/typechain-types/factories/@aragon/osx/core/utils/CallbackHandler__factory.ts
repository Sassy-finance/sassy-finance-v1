/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  CallbackHandler,
  CallbackHandlerInterface,
} from "../../../../../@aragon/osx/core/utils/CallbackHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "callbackSelector",
        type: "bytes4",
      },
      {
        internalType: "bytes4",
        name: "magicNumber",
        type: "bytes4",
      },
    ],
    name: "UnkownCallback",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "CallbackReceived",
    type: "event",
  },
] as const;

export class CallbackHandler__factory {
  static readonly abi = _abi;
  static createInterface(): CallbackHandlerInterface {
    return new utils.Interface(_abi) as CallbackHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallbackHandler {
    return new Contract(address, _abi, signerOrProvider) as CallbackHandler;
  }
}
